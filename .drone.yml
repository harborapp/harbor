workspace:
  base: /srv/app
  path: src/github.com/umschlag/umschlag-api

pipeline:
  cache-restore:
    image: plugins/s3-cache:1
    pull: true
    secrets: [ cache_s3_endpoint, cache_s3_access_key, cache_s3_secret_key ]
    restore: true
    when:
      local: false

  backend-prepare:
    image: webhippie/golang:edge
    pull: true
    environment:
      - CGO_ENABLED=1
      - GOPATH=/srv/app
    commands:
      - make clean
      - make retool
      - make generate

  backend-vet:
    image: webhippie/golang:edge
    pull: true
    group: backend
    environment:
      - CGO_ENABLED=1
      - GOPATH=/srv/app
    commands:
      - make vet

  backend-check:
    image: webhippie/golang:edge
    pull: true
    group: backend
    environment:
      - CGO_ENABLED=1
      - GOPATH=/srv/app
    commands:
      - make megacheck

  backend-lint:
    image: webhippie/golang:edge
    pull: true
    group: backend
    environment:
      - CGO_ENABLED=1
      - GOPATH=/srv/app
    commands:
      - make lint

  backend-test:
    image: webhippie/golang:edge
    pull: true
    group: backend
    environment:
      - CGO_ENABLED=1
      - GOPATH=/srv/app
    commands:
      - make test

  backend-mysql:
    image: webhippie/golang:edge
    pull: true
    group: backend
    environment:
      - CGO_ENABLED=1
      - GOPATH=/srv/app
      - DB=mysql-service:3306
    commands:
      - make test-mysql

  backend-pgsql:
    image: webhippie/golang:edge
    pull: true
    group: backend
    environment:
      - CGO_ENABLED=1
      - GOPATH=/srv/app
      - DB=pgsql-service:5432
    commands:
      - make test-pgsql

  backend-build:
    image: webhippie/golang:edge
    pull: true
    group: backend
    environment:
      - CGO_ENABLED=1
      - GOPATH=/srv/app
      - TAGS=
    commands:
      - make build

  backend-windows:
    image: karalabe/xgo-latest:latest
    pull: true
    group: release
    environment:
      - CGO_ENABLED=1
      - GOPATH=/srv/app
      - TAGS=
    commands:
      - make release-dirs release-windows
    when:
      event: [ push, tag ]
      branch: [ master, release/* ]

  backend-linux:
    image: karalabe/xgo-latest:latest
    pull: true
    group: release
    environment:
      - CGO_ENABLED=1
      - GOPATH=/srv/app
      - TAGS=
    commands:
      - make release-dirs release-linux
    when:
      event: [ push, tag ]
      branch: [ master, release/* ]

  backend-darwin:
    image: karalabe/xgo-latest:latest
    pull: true
    group: release
    environment:
      - CGO_ENABLED=1
      - GOPATH=/srv/app
      - TAGS=
    commands:
      - make release-dirs release-darwin
    when:
      event: [ push, tag ]
      branch: [ master, release/* ]

  backend-finish:
    image: webhippie/golang:edge
    pull: true
    environment:
      - CGO_ENABLED=1
      - GOPATH=/srv/app
      - TAGS=
    commands:
      - make release-copy release-check
    when:
      event: [ push, tag ]
      branch: [ master, release/* ]

  docker-publish:
    image: plugins/docker:17.05
    pull: true
    secrets: [ docker_username, docker_password ]
    repo: umschlag/umschlag-api
    tags: [ '${DRONE_TAG##v}' ]
    when:
      event: [ tag ]

  docker-publish:
    image: plugins/docker:17.05
    pull: true
    secrets: [ docker_username, docker_password ]
    repo: umschlag/umschlag-api
    tags: [ '${DRONE_BRANCH##release/v}' ]
    when:
      event: [ push ]
      branch: [ release/* ]

  docker-publish:
    image: plugins/docker:17.05
    pull: true
    secrets: [ docker_username, docker_password ]
    repo: umschlag/umschlag-api
    tags: [ 'latest' ]
    when:
      event: [ push ]
      branch: [ master ]

  docker-microbadger:
    image: plugins/webhook:1
    pull: true
    secrets:
      - source: microbadger_token
        target: plugin_urls
    when:
      event: [ push, tag ]
      branch: [ master, release/* ]

  cache-rebuild:
    image: plugins/s3-cache:1
    pull: true
    secrets: [ cache_s3_endpoint, cache_s3_access_key, cache_s3_secret_key ]
    rebuild: true
    mount:
      - _tools/bin
      - _tools/pkg
    when:
      local: false
      event: [ push ]
      branch: [ master, release/* ]

  cache-flush:
    image: plugins/s3-cache:1
    pull: true
    secrets: [ cache_s3_endpoint, cache_s3_access_key, cache_s3_secret_key ]
    flush: true
    flush_age: 14
    when:
      local: false
      event: [ push ]
      branch: [ master, release/* ]

  archive-release:
    image: plugins/s3:1
    pull: true
    secrets: [ s3_endpoint, aws_access_key_id, aws_secret_access_key, s3_bucket ]
    source: dist/release/*
    target: /umschlag/api/${DRONE_TAG##v}
    strip_prefix: dist/release/
    path_style: true
    when:
      event: [ tag ]

  archive-release:
    image: plugins/s3:1
    pull: true
    secrets: [ s3_endpoint, aws_access_key_id, aws_secret_access_key, s3_bucket ]
    source: dist/release/*
    target: /umschlag/api/${DRONE_TAG##release/v}
    strip_prefix: dist/release/
    path_style: true
    when:
      event: [ push ]
      branch: [ release/* ]

  archive-release:
    image: plugins/s3:1
    pull: true
    secrets: [ s3_endpoint, aws_access_key_id, aws_secret_access_key, s3_bucket ]
    source: dist/release/*
    target: /umschlag/api/master
    strip_prefix: dist/release/
    path_style: true
    when:
      event: [ push ]
      branch: [ master ]

  github-release:
    image: plugins/github-release:1
    pull: true
    secrets: [ github_token ]
    files:
      - dist/release/*
    when:
      event: [ tag ]

  notify-gitter:
    image: plugins/gitter:1
    pull: true
    secrets: [ gitter_webhook ]
    when:
      local: false
      status: [ success, failure ]

services:
  mysql-service:
    image: mysql:5.7
    environment:
      - MYSQL_DATABASE=test
      - MYSQL_ALLOW_EMPTY_PASSWORD=yes

  pgsql-service:
    image: postgres:9.5
    environment:
      - POSTGRES_DB=test
